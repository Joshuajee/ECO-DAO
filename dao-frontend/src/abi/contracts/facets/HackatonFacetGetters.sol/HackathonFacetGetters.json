[
  {
    "inputs": [],
    "name": "HackathonNotFound",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidCountInput",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "WrongStartAndCountInput",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "hackID",
        "type": "uint256"
      }
    ],
    "name": "getHackathon",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "hackathonAddress",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "author",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "description",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "startDate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "endDate",
            "type": "uint256"
          },
          {
            "internalType": "uint16",
            "name": "maxNumAdmittable",
            "type": "uint16"
          },
          {
            "internalType": "uint16",
            "name": "numOfStudent",
            "type": "uint16"
          },
          {
            "internalType": "address",
            "name": "winner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "firstRunnerUp",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "secondRunnerUp",
            "type": "address"
          },
          {
            "internalType": "uint8",
            "name": "winnerPercentage",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "firstRunnerUpPercentage",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "secondRunnerUpPercentage",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "funding",
            "type": "uint256"
          },
          {
            "internalType": "uint16",
            "name": "minScoreTokenRequired",
            "type": "uint16"
          },
          {
            "internalType": "enum LibHackFund.State",
            "name": "state",
            "type": "uint8"
          }
        ],
        "internalType": "struct LibHackFund.Hack",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "start",
        "type": "uint256"
      },
      {
        "internalType": "uint8",
        "name": "count",
        "type": "uint8"
      }
    ],
    "name": "getHackathons",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "hackathonAddress",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "author",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "description",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "startDate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "endDate",
            "type": "uint256"
          },
          {
            "internalType": "uint16",
            "name": "maxNumAdmittable",
            "type": "uint16"
          },
          {
            "internalType": "uint16",
            "name": "numOfStudent",
            "type": "uint16"
          },
          {
            "internalType": "address",
            "name": "winner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "firstRunnerUp",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "secondRunnerUp",
            "type": "address"
          },
          {
            "internalType": "uint8",
            "name": "winnerPercentage",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "firstRunnerUpPercentage",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "secondRunnerUpPercentage",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "funding",
            "type": "uint256"
          },
          {
            "internalType": "uint16",
            "name": "minScoreTokenRequired",
            "type": "uint16"
          },
          {
            "internalType": "enum LibHackFund.State",
            "name": "state",
            "type": "uint8"
          }
        ],
        "internalType": "struct LibHackFund.Hack[]",
        "name": "Hackathons",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "hackID",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "participant",
        "type": "address"
      }
    ],
    "name": "isParticipant",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "numberofHackathons",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]
